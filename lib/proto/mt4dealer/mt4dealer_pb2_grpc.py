# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc
import sys
sys.path.append("../../proto")
from copytrade import copytrade_pb2 as copytrade_dot_copytrade__pb2
from mt4dealer import mt4dealer_pb2 as mt4dealer_dot_mt4dealer__pb2
from tradesignal import tradesignal_pb2 as tradesignal_dot_tradesignal__pb2


class MT4DealerSrvStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.CreateAccount = channel.unary_unary(
        '/mt4dealer.MT4DealerSrv/CreateAccount',
        request_serializer=mt4dealer_dot_mt4dealer__pb2.Account.SerializeToString,
        response_deserializer=mt4dealer_dot_mt4dealer__pb2.Account.FromString,
        )
    self.GetAccount = channel.unary_unary(
        '/mt4dealer.MT4DealerSrv/GetAccount',
        request_serializer=mt4dealer_dot_mt4dealer__pb2.Account.SerializeToString,
        response_deserializer=mt4dealer_dot_mt4dealer__pb2.Account.FromString,
        )
    self.GetAccountList = channel.unary_unary(
        '/mt4dealer.MT4DealerSrv/GetAccountList',
        request_serializer=mt4dealer_dot_mt4dealer__pb2.Empty.SerializeToString,
        response_deserializer=mt4dealer_dot_mt4dealer__pb2.GetAccountListResponse.FromString,
        )
    self.DepositWithdraw = channel.unary_unary(
        '/mt4dealer.MT4DealerSrv/DepositWithdraw',
        request_serializer=mt4dealer_dot_mt4dealer__pb2.DepositWithdrawMessage.SerializeToString,
        response_deserializer=mt4dealer_dot_mt4dealer__pb2.DepositWithdrawMessage.FromString,
        )
    self.GetAccountMarginLevel = channel.unary_unary(
        '/mt4dealer.MT4DealerSrv/GetAccountMarginLevel',
        request_serializer=mt4dealer_dot_mt4dealer__pb2.Account.SerializeToString,
        response_deserializer=mt4dealer_dot_mt4dealer__pb2.Assest.FromString,
        )
    self.GetAsset = channel.unary_unary(
        '/mt4dealer.MT4DealerSrv/GetAsset',
        request_serializer=mt4dealer_dot_mt4dealer__pb2.Account.SerializeToString,
        response_deserializer=mt4dealer_dot_mt4dealer__pb2.Assest.FromString,
        )
    self.GetServerTime = channel.unary_unary(
        '/mt4dealer.MT4DealerSrv/GetServerTime',
        request_serializer=copytrade_dot_copytrade__pb2.Empty.SerializeToString,
        response_deserializer=copytrade_dot_copytrade__pb2.ServerTime.FromString,
        )
    self.GetSymbolPrice = channel.unary_unary(
        '/mt4dealer.MT4DealerSrv/GetSymbolPrice',
        request_serializer=mt4dealer_dot_mt4dealer__pb2.SymbolPrice.SerializeToString,
        response_deserializer=mt4dealer_dot_mt4dealer__pb2.SymbolPrice.FromString,
        )
    self.GetAllGroupSymbols = channel.unary_unary(
        '/mt4dealer.MT4DealerSrv/GetAllGroupSymbols',
        request_serializer=mt4dealer_dot_mt4dealer__pb2.Empty.SerializeToString,
        response_deserializer=mt4dealer_dot_mt4dealer__pb2.GroupSymbols.FromString,
        )
    self.OpenPosition = channel.unary_unary(
        '/mt4dealer.MT4DealerSrv/OpenPosition',
        request_serializer=mt4dealer_dot_mt4dealer__pb2.Order.SerializeToString,
        response_deserializer=mt4dealer_dot_mt4dealer__pb2.Order.FromString,
        )
    self.ClosePosition = channel.unary_unary(
        '/mt4dealer.MT4DealerSrv/ClosePosition',
        request_serializer=mt4dealer_dot_mt4dealer__pb2.Order.SerializeToString,
        response_deserializer=mt4dealer_dot_mt4dealer__pb2.Order.FromString,
        )
    self.UpdatePosition = channel.unary_unary(
        '/mt4dealer.MT4DealerSrv/UpdatePosition',
        request_serializer=mt4dealer_dot_mt4dealer__pb2.Order.SerializeToString,
        response_deserializer=mt4dealer_dot_mt4dealer__pb2.Order.FromString,
        )
    self.DeletePosition = channel.unary_unary(
        '/mt4dealer.MT4DealerSrv/DeletePosition',
        request_serializer=mt4dealer_dot_mt4dealer__pb2.Order.SerializeToString,
        response_deserializer=mt4dealer_dot_mt4dealer__pb2.Order.FromString,
        )
    self.SymbolQuote = channel.unary_stream(
        '/mt4dealer.MT4DealerSrv/SymbolQuote',
        request_serializer=mt4dealer_dot_mt4dealer__pb2.Empty.SerializeToString,
        response_deserializer=mt4dealer_dot_mt4dealer__pb2.Quotes.FromString,
        )
    self.SubscribeTrade = channel.unary_stream(
        '/mt4dealer.MT4DealerSrv/SubscribeTrade',
        request_serializer=mt4dealer_dot_mt4dealer__pb2.Empty.SerializeToString,
        response_deserializer=mt4dealer_dot_mt4dealer__pb2.Trade.FromString,
        )
    self.CopyTrade = channel.unary_unary(
        '/mt4dealer.MT4DealerSrv/CopyTrade',
        request_serializer=copytrade_dot_copytrade__pb2.OrderWithQuantity.SerializeToString,
        response_deserializer=copytrade_dot_copytrade__pb2.OrderWithQuantity.FromString,
        )
    self.GetOpenOrderList = channel.unary_unary(
        '/mt4dealer.MT4DealerSrv/GetOpenOrderList',
        request_serializer=mt4dealer_dot_mt4dealer__pb2.Empty.SerializeToString,
        response_deserializer=mt4dealer_dot_mt4dealer__pb2.GetOpenOrderListResponse.FromString,
        )
    self.GetOpenOrderProfitList = channel.unary_unary(
        '/mt4dealer.MT4DealerSrv/GetOpenOrderProfitList',
        request_serializer=copytrade_dot_copytrade__pb2.Empty.SerializeToString,
        response_deserializer=copytrade_dot_copytrade__pb2.TradeProfitList.FromString,
        )
    self.GetAllQuote = channel.unary_unary(
        '/mt4dealer.MT4DealerSrv/GetAllQuote',
        request_serializer=mt4dealer_dot_mt4dealer__pb2.Empty.SerializeToString,
        response_deserializer=mt4dealer_dot_mt4dealer__pb2.Quotes.FromString,
        )
    self.GetTradeRecord = channel.unary_unary(
        '/mt4dealer.MT4DealerSrv/GetTradeRecord',
        request_serializer=mt4dealer_dot_mt4dealer__pb2.Trade.SerializeToString,
        response_deserializer=mt4dealer_dot_mt4dealer__pb2.Trade.FromString,
        )
    self.OnlineListClosePosition = channel.unary_unary(
        '/mt4dealer.MT4DealerSrv/OnlineListClosePosition',
        request_serializer=mt4dealer_dot_mt4dealer__pb2.Orders.SerializeToString,
        response_deserializer=mt4dealer_dot_mt4dealer__pb2.Orders.FromString,
        )
    self.CheckAccount = channel.unary_unary(
        '/mt4dealer.MT4DealerSrv/CheckAccount',
        request_serializer=copytrade_dot_copytrade__pb2.AccountInfo.SerializeToString,
        response_deserializer=copytrade_dot_copytrade__pb2.AccountInfo.FromString,
        )
    self.GetChart = channel.unary_unary(
        '/mt4dealer.MT4DealerSrv/GetChart',
        request_serializer=mt4dealer_dot_mt4dealer__pb2.ChartRequest.SerializeToString,
        response_deserializer=mt4dealer_dot_mt4dealer__pb2.ChartResponse.FromString,
        )
    self.GetUserTrades = channel.unary_unary(
        '/mt4dealer.MT4DealerSrv/GetUserTrades',
        request_serializer=mt4dealer_dot_mt4dealer__pb2.UserTradesRequest.SerializeToString,
        response_deserializer=mt4dealer_dot_mt4dealer__pb2.UserTradesResponse.FromString,
        )
    self.GetOpenOrderListByLogin = channel.unary_unary(
        '/mt4dealer.MT4DealerSrv/GetOpenOrderListByLogin',
        request_serializer=mt4dealer_dot_mt4dealer__pb2.Account.SerializeToString,
        response_deserializer=mt4dealer_dot_mt4dealer__pb2.GetOpenOrderListResponse.FromString,
        )
    self.GetTradeSignalList = channel.unary_unary(
        '/mt4dealer.MT4DealerSrv/GetTradeSignalList',
        request_serializer=tradesignal_dot_tradesignal__pb2.TradeSignalListRequest.SerializeToString,
        response_deserializer=tradesignal_dot_tradesignal__pb2.TradeSignalListReply.FromString,
        )
    self.SubscribeTradeChanged = channel.unary_stream(
        '/mt4dealer.MT4DealerSrv/SubscribeTradeChanged',
        request_serializer=mt4dealer_dot_mt4dealer__pb2.Empty.SerializeToString,
        response_deserializer=tradesignal_dot_tradesignal__pb2.SubscribeTradeSignal.FromString,
        )
    self.SubscribeAccount = channel.unary_stream(
        '/mt4dealer.MT4DealerSrv/SubscribeAccount',
        request_serializer=mt4dealer_dot_mt4dealer__pb2.Empty.SerializeToString,
        response_deserializer=mt4dealer_dot_mt4dealer__pb2.Account.FromString,
        )
    self.CloseAllPositions = channel.unary_unary(
        '/mt4dealer.MT4DealerSrv/CloseAllPositions',
        request_serializer=mt4dealer_dot_mt4dealer__pb2.CloseAllPositionsRequest.SerializeToString,
        response_deserializer=mt4dealer_dot_mt4dealer__pb2.Orders.FromString,
        )
    self.GetNextClosableTime = channel.unary_unary(
        '/mt4dealer.MT4DealerSrv/GetNextClosableTime',
        request_serializer=mt4dealer_dot_mt4dealer__pb2.Account.SerializeToString,
        response_deserializer=mt4dealer_dot_mt4dealer__pb2.GetNextClosableTimeReply.FromString,
        )


class MT4DealerSrvServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def CreateAccount(self, request, context):
    """新建账户
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetAccount(self, request, context):
    """获取账户信息
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetAccountList(self, request, context):
    """获取所有账户
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DepositWithdraw(self, request, context):
    """出入金
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetAccountMarginLevel(self, request, context):
    """获取账户保证金比列
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetAsset(self, request, context):
    """从本地获取账户保证金比列
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetServerTime(self, request, context):
    """获取服务时间
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetSymbolPrice(self, request, context):
    """获取交易品种价格
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetAllGroupSymbols(self, request, context):
    """获取所有组交易品种
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def OpenPosition(self, request, context):
    """开仓
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ClosePosition(self, request, context):
    """平仓
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def UpdatePosition(self, request, context):
    """修改持仓单
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DeletePosition(self, request, context):
    """删除挂单
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SymbolQuote(self, request, context):
    """获取品种报价
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SubscribeTrade(self, request, context):
    """订阅交易更新
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CopyTrade(self, request, context):
    """交易
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetOpenOrderList(self, request, context):
    """获取所有持仓单
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetOpenOrderProfitList(self, request, context):
    """获取所有持仓单收益
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetAllQuote(self, request, context):
    """获取所以报价
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetTradeRecord(self, request, context):
    """获得订单记录
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def OnlineListClosePosition(self, request, context):
    """在线交易批量平仓
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CheckAccount(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetChart(self, request, context):
    """获取报价图表数据
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetUserTrades(self, request, context):
    """获取指定时间段交易订单(开仓和平仓)
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetOpenOrderListByLogin(self, request, context):
    """根据登录账户获取所有持仓单
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetTradeSignalList(self, request, context):
    """获取帐户所有订单
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SubscribeTradeChanged(self, request, context):
    """订阅开仓、平仓订单流
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SubscribeAccount(self, request, context):
    """订阅用户流
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CloseAllPositions(self, request, context):
    """平掉账户所有持仓单
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetNextClosableTime(self, request, context):
    """获取账号下一次能交易的时间
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_MT4DealerSrvServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'CreateAccount': grpc.unary_unary_rpc_method_handler(
          servicer.CreateAccount,
          request_deserializer=mt4dealer_dot_mt4dealer__pb2.Account.FromString,
          response_serializer=mt4dealer_dot_mt4dealer__pb2.Account.SerializeToString,
      ),
      'GetAccount': grpc.unary_unary_rpc_method_handler(
          servicer.GetAccount,
          request_deserializer=mt4dealer_dot_mt4dealer__pb2.Account.FromString,
          response_serializer=mt4dealer_dot_mt4dealer__pb2.Account.SerializeToString,
      ),
      'GetAccountList': grpc.unary_unary_rpc_method_handler(
          servicer.GetAccountList,
          request_deserializer=mt4dealer_dot_mt4dealer__pb2.Empty.FromString,
          response_serializer=mt4dealer_dot_mt4dealer__pb2.GetAccountListResponse.SerializeToString,
      ),
      'DepositWithdraw': grpc.unary_unary_rpc_method_handler(
          servicer.DepositWithdraw,
          request_deserializer=mt4dealer_dot_mt4dealer__pb2.DepositWithdrawMessage.FromString,
          response_serializer=mt4dealer_dot_mt4dealer__pb2.DepositWithdrawMessage.SerializeToString,
      ),
      'GetAccountMarginLevel': grpc.unary_unary_rpc_method_handler(
          servicer.GetAccountMarginLevel,
          request_deserializer=mt4dealer_dot_mt4dealer__pb2.Account.FromString,
          response_serializer=mt4dealer_dot_mt4dealer__pb2.Assest.SerializeToString,
      ),
      'GetAsset': grpc.unary_unary_rpc_method_handler(
          servicer.GetAsset,
          request_deserializer=mt4dealer_dot_mt4dealer__pb2.Account.FromString,
          response_serializer=mt4dealer_dot_mt4dealer__pb2.Assest.SerializeToString,
      ),
      'GetServerTime': grpc.unary_unary_rpc_method_handler(
          servicer.GetServerTime,
          request_deserializer=copytrade_dot_copytrade__pb2.Empty.FromString,
          response_serializer=copytrade_dot_copytrade__pb2.ServerTime.SerializeToString,
      ),
      'GetSymbolPrice': grpc.unary_unary_rpc_method_handler(
          servicer.GetSymbolPrice,
          request_deserializer=mt4dealer_dot_mt4dealer__pb2.SymbolPrice.FromString,
          response_serializer=mt4dealer_dot_mt4dealer__pb2.SymbolPrice.SerializeToString,
      ),
      'GetAllGroupSymbols': grpc.unary_unary_rpc_method_handler(
          servicer.GetAllGroupSymbols,
          request_deserializer=mt4dealer_dot_mt4dealer__pb2.Empty.FromString,
          response_serializer=mt4dealer_dot_mt4dealer__pb2.GroupSymbols.SerializeToString,
      ),
      'OpenPosition': grpc.unary_unary_rpc_method_handler(
          servicer.OpenPosition,
          request_deserializer=mt4dealer_dot_mt4dealer__pb2.Order.FromString,
          response_serializer=mt4dealer_dot_mt4dealer__pb2.Order.SerializeToString,
      ),
      'ClosePosition': grpc.unary_unary_rpc_method_handler(
          servicer.ClosePosition,
          request_deserializer=mt4dealer_dot_mt4dealer__pb2.Order.FromString,
          response_serializer=mt4dealer_dot_mt4dealer__pb2.Order.SerializeToString,
      ),
      'UpdatePosition': grpc.unary_unary_rpc_method_handler(
          servicer.UpdatePosition,
          request_deserializer=mt4dealer_dot_mt4dealer__pb2.Order.FromString,
          response_serializer=mt4dealer_dot_mt4dealer__pb2.Order.SerializeToString,
      ),
      'DeletePosition': grpc.unary_unary_rpc_method_handler(
          servicer.DeletePosition,
          request_deserializer=mt4dealer_dot_mt4dealer__pb2.Order.FromString,
          response_serializer=mt4dealer_dot_mt4dealer__pb2.Order.SerializeToString,
      ),
      'SymbolQuote': grpc.unary_stream_rpc_method_handler(
          servicer.SymbolQuote,
          request_deserializer=mt4dealer_dot_mt4dealer__pb2.Empty.FromString,
          response_serializer=mt4dealer_dot_mt4dealer__pb2.Quotes.SerializeToString,
      ),
      'SubscribeTrade': grpc.unary_stream_rpc_method_handler(
          servicer.SubscribeTrade,
          request_deserializer=mt4dealer_dot_mt4dealer__pb2.Empty.FromString,
          response_serializer=mt4dealer_dot_mt4dealer__pb2.Trade.SerializeToString,
      ),
      'CopyTrade': grpc.unary_unary_rpc_method_handler(
          servicer.CopyTrade,
          request_deserializer=copytrade_dot_copytrade__pb2.OrderWithQuantity.FromString,
          response_serializer=copytrade_dot_copytrade__pb2.OrderWithQuantity.SerializeToString,
      ),
      'GetOpenOrderList': grpc.unary_unary_rpc_method_handler(
          servicer.GetOpenOrderList,
          request_deserializer=mt4dealer_dot_mt4dealer__pb2.Empty.FromString,
          response_serializer=mt4dealer_dot_mt4dealer__pb2.GetOpenOrderListResponse.SerializeToString,
      ),
      'GetOpenOrderProfitList': grpc.unary_unary_rpc_method_handler(
          servicer.GetOpenOrderProfitList,
          request_deserializer=copytrade_dot_copytrade__pb2.Empty.FromString,
          response_serializer=copytrade_dot_copytrade__pb2.TradeProfitList.SerializeToString,
      ),
      'GetAllQuote': grpc.unary_unary_rpc_method_handler(
          servicer.GetAllQuote,
          request_deserializer=mt4dealer_dot_mt4dealer__pb2.Empty.FromString,
          response_serializer=mt4dealer_dot_mt4dealer__pb2.Quotes.SerializeToString,
      ),
      'GetTradeRecord': grpc.unary_unary_rpc_method_handler(
          servicer.GetTradeRecord,
          request_deserializer=mt4dealer_dot_mt4dealer__pb2.Trade.FromString,
          response_serializer=mt4dealer_dot_mt4dealer__pb2.Trade.SerializeToString,
      ),
      'OnlineListClosePosition': grpc.unary_unary_rpc_method_handler(
          servicer.OnlineListClosePosition,
          request_deserializer=mt4dealer_dot_mt4dealer__pb2.Orders.FromString,
          response_serializer=mt4dealer_dot_mt4dealer__pb2.Orders.SerializeToString,
      ),
      'CheckAccount': grpc.unary_unary_rpc_method_handler(
          servicer.CheckAccount,
          request_deserializer=copytrade_dot_copytrade__pb2.AccountInfo.FromString,
          response_serializer=copytrade_dot_copytrade__pb2.AccountInfo.SerializeToString,
      ),
      'GetChart': grpc.unary_unary_rpc_method_handler(
          servicer.GetChart,
          request_deserializer=mt4dealer_dot_mt4dealer__pb2.ChartRequest.FromString,
          response_serializer=mt4dealer_dot_mt4dealer__pb2.ChartResponse.SerializeToString,
      ),
      'GetUserTrades': grpc.unary_unary_rpc_method_handler(
          servicer.GetUserTrades,
          request_deserializer=mt4dealer_dot_mt4dealer__pb2.UserTradesRequest.FromString,
          response_serializer=mt4dealer_dot_mt4dealer__pb2.UserTradesResponse.SerializeToString,
      ),
      'GetOpenOrderListByLogin': grpc.unary_unary_rpc_method_handler(
          servicer.GetOpenOrderListByLogin,
          request_deserializer=mt4dealer_dot_mt4dealer__pb2.Account.FromString,
          response_serializer=mt4dealer_dot_mt4dealer__pb2.GetOpenOrderListResponse.SerializeToString,
      ),
      'GetTradeSignalList': grpc.unary_unary_rpc_method_handler(
          servicer.GetTradeSignalList,
          request_deserializer=tradesignal_dot_tradesignal__pb2.TradeSignalListRequest.FromString,
          response_serializer=tradesignal_dot_tradesignal__pb2.TradeSignalListReply.SerializeToString,
      ),
      'SubscribeTradeChanged': grpc.unary_stream_rpc_method_handler(
          servicer.SubscribeTradeChanged,
          request_deserializer=mt4dealer_dot_mt4dealer__pb2.Empty.FromString,
          response_serializer=tradesignal_dot_tradesignal__pb2.SubscribeTradeSignal.SerializeToString,
      ),
      'SubscribeAccount': grpc.unary_stream_rpc_method_handler(
          servicer.SubscribeAccount,
          request_deserializer=mt4dealer_dot_mt4dealer__pb2.Empty.FromString,
          response_serializer=mt4dealer_dot_mt4dealer__pb2.Account.SerializeToString,
      ),
      'CloseAllPositions': grpc.unary_unary_rpc_method_handler(
          servicer.CloseAllPositions,
          request_deserializer=mt4dealer_dot_mt4dealer__pb2.CloseAllPositionsRequest.FromString,
          response_serializer=mt4dealer_dot_mt4dealer__pb2.Orders.SerializeToString,
      ),
      'GetNextClosableTime': grpc.unary_unary_rpc_method_handler(
          servicer.GetNextClosableTime,
          request_deserializer=mt4dealer_dot_mt4dealer__pb2.Account.FromString,
          response_serializer=mt4dealer_dot_mt4dealer__pb2.GetNextClosableTimeReply.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'mt4dealer.MT4DealerSrv', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
