# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: sam/sam.proto

import sys
sys.path.append("../../proto")
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from copytrade import copytrade_pb2 as copytrade_dot_copytrade__pb2
from tradesignal import tradesignal_pb2 as tradesignal_dot_tradesignal__pb2
from mt4api import mt4api_pb2 as mt4api_dot_mt4api__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='sam/sam.proto',
  package='sam',
  syntax='proto3',
  serialized_pb=_b('\n\rsam/sam.proto\x12\x03sam\x1a\x19\x63opytrade/copytrade.proto\x1a\x1dtradesignal/tradesignal.proto\x1a\x13mt4api/mt4api.proto\"\xa3\x01\n\x0e\x41\x63\x63ountRequest\x12\x0f\n\x07\x41\x63\x63ount\x18\x01 \x01(\t\x12\x10\n\x08\x42rokerID\x18\x02 \x01(\x05\x12\x0e\n\x06UserID\x18\x03 \x01(\x05\x12\x10\n\x08Password\x18\x04 \x01(\t\x12\x0e\n\x06Status\x18\x05 \x01(\x05\x12\x0c\n\x04Type\x18\x06 \x01(\x05\x12\x0c\n\x04Time\x18\x07 \x01(\x03\x12\r\n\x05\x41ppID\x18\x08 \x01(\x05\x12\x11\n\tRequestID\x18\x14 \x01(\x05\"\xf6\x01\n\x05\x41sset\x12\x0f\n\x07\x41\x63\x63ount\x18\x01 \x01(\t\x12\x10\n\x08\x42rokerID\x18\x02 \x01(\x05\x12\x0f\n\x07\x42\x61lance\x18\x03 \x01(\x01\x12\x0e\n\x06\x43redit\x18\x04 \x01(\x01\x12\x12\n\nFreeMargin\x18\x05 \x01(\x01\x12\x0e\n\x06Profit\x18\x06 \x01(\x01\x12\x0e\n\x06\x45quity\x18\x07 \x01(\x01\x12\x10\n\x08Leverage\x18\x08 \x01(\x05\x12\x13\n\x0bMarginLevel\x18\t \x01(\x01\x12\x0e\n\x06Margin\x18\n \x01(\x01\x12\x12\n\nProfitLoss\x18\x0b \x01(\x01\x12\x15\n\rHistoryProfit\x18\x0c \x01(\x01\x12\x13\n\x0bHistorySwap\x18\r \x01(\x01\"c\n\x0fSymbolListReply\x12\x1c\n\x04List\x18\x01 \x03(\x0b\x32\x0e.mt4api.Symbol\x12\r\n\x05\x43ount\x18\x02 \x01(\x05\x12\x11\n\tRequestID\x18\n \x01(\x05\x12\x10\n\x08RPCError\x18\x0b \x01(\t\"\x99\x02\n\tMT4Client\x12\x0c\n\x04Init\x18\x01 \x01(\x08\x12\x19\n\x11LastHeartBeatTime\x18\x02 \x01(\x03\x12\x15\n\rLastAssetTime\x18\x03 \x01(\x03\x12\x0e\n\x06UserID\x18\x04 \x01(\x05\x12\x13\n\x0bSyncTimeMin\x18\x05 \x01(\x03\x12\x10\n\x08\x43lientID\x18\x06 \x01(\x05\x12\x11\n\tSessionID\x18\x07 \x01(\t\x12\x0f\n\x07\x41\x63\x63ount\x18\x08 \x01(\t\x12\x10\n\x08\x42rokerID\x18\t \x01(\x05\x12\x0e\n\x06Server\x18\n \x01(\t\x12\x0f\n\x07\x43ompany\x18\x0b \x01(\t\x12\x14\n\x0cMT4IsConnect\x18\x0c \x01(\x08\x12\x14\n\x0cHisotryTotal\x18\r \x01(\x05\x12\x12\n\nMaxTradeID\x18\x0e \x01(\x05\"A\n\x12GetMT4ClientsReply\x12\x1c\n\x04List\x18\x01 \x03(\x0b\x32\x0e.sam.MT4Client\x12\r\n\x05\x43ount\x18\x02 \x01(\x05\"G\n\x14GetMT4ClientsRequest\x12\x10\n\x08\x42rokerID\x18\x01 \x01(\x05\x12\x0f\n\x07\x41\x63\x63ount\x18\x02 \x01(\t\x12\x0c\n\x04Mode\x18\x03 \x01(\x05\"j\n\x11SyncTradesRequest\x12\x0f\n\x07\x41\x63\x63ount\x18\x01 \x01(\t\x12\x10\n\x08\x42rokerID\x18\x02 \x01(\x05\x12\x11\n\tStartTime\x18\x03 \x01(\x03\x12\x0f\n\x07\x45ndTime\x18\x04 \x01(\x03\x12\x0e\n\x06Status\x18\x05 \x01(\x05\"$\n\x0fSyncTradesReply\x12\x11\n\tSyncTotal\x18\x01 \x01(\x05\"?\n\x16SyncHistoryTradesReply\x12\x12\n\nBeginIndex\x18\x01 \x01(\x05\x12\x11\n\tSyncTotal\x18\x02 \x01(\x05\"\x07\n\x05\x45mpty\"\x1f\n\x0cSuccessReply\x12\x0f\n\x07Success\x18\x01 \x01(\x08\"a\n\x0fPositionRequest\x12-\n\x0bTradeSignal\x18\x01 \x01(\x0b\x32\x18.tradesignal.TradeSignal\x12\x1f\n\x04Type\x18\x02 \x01(\x0e\x32\x11.sam.PositionType\"n\n\rPositionReply\x12-\n\x0bTradeSignal\x18\x01 \x01(\x0b\x32\x18.tradesignal.TradeSignal\x12\x1f\n\x04Type\x18\x02 \x01(\x0e\x32\x11.sam.PositionType\x12\r\n\x05\x45rror\x18\x03 \x01(\t*/\n\x0cPositionType\x12\x08\n\x04Open\x10\x00\x12\n\n\x06Update\x10\x01\x12\t\n\x05\x43lose\x10\x02*\xf9\x01\n\x12SamSignalSrvErrors\x12\x08\n\x04None\x10\x00\x12\x1e\n\x18\x45rrInvalidAccountRequest\x10\xf9\xc6\x05\x12\x17\n\x11\x45rrClientNotExist\x10\xe1\xce\x05\x12\x15\n\x0f\x45rrInvestorMode\x10\xc9\xd6\x05\x12\x10\n\nErrNoQuote\x10\xca\xd6\x05\x12\x16\n\x10\x45rrNoSymbolMatch\x10\xcb\xd6\x05\x12\x14\n\x0e\x45rrAppNotFound\x10\xcc\xd6\x05\x12\x19\n\x13\x45rrAppInvalidStatus\x10\xcd\xd6\x05\x12\x13\n\rErrAppNoQuote\x10\xce\xd6\x05\x12\x19\n\x13\x45rrAppOrderNotFound\x10\xcf\xd6\x05\x32\xa7\x07\n\x0cSamSignalSrv\x12\x36\n\x11GetAssetByAccount\x12\x13.sam.AccountRequest\x1a\n.sam.Asset\"\x00\x12\x45\n\x16GetSymbolListByAccount\x12\x13.sam.AccountRequest\x1a\x14.sam.SymbolListReply\"\x00\x12O\n\x1cGetSymbolListByAccountStream\x12\x13.sam.AccountRequest\x1a\x14.sam.SymbolListReply\"\x00(\x01\x30\x01\x12@\n\x14SubscribeTradeSignal\x12\n.sam.Empty\x1a\x18.tradesignal.TradeSignal\"\x00\x30\x01\x12\x45\n\rGetMT4Clients\x12\x19.sam.GetMT4ClientsRequest\x1a\x17.sam.GetMT4ClientsReply\"\x00\x12<\n\nSyncTrades\x12\x16.sam.SyncTradesRequest\x1a\x14.sam.SyncTradesReply\"\x00\x12G\n\x11SyncHistoryTrades\x12\x13.sam.AccountRequest\x1a\x1b.sam.SyncHistoryTradesReply\"\x00\x12=\n\x11NotifyBindAccount\x12\x13.sam.AccountRequest\x1a\x11.sam.SuccessReply\"\x00\x12@\n\x14NotifyInvalidAccount\x12\x13.sam.AccountRequest\x1a\x11.sam.SuccessReply\"\x00\x12\x36\n\x08Position\x12\x14.sam.PositionRequest\x1a\x12.sam.PositionReply\"\x00\x12I\n\tCopyTrade\x12\x1c.copytrade.OrderWithQuantity\x1a\x1c.copytrade.OrderWithQuantity\"\x00\x12S\n\x0f\x43opyTradeStream\x12\x1c.copytrade.OrderWithQuantity\x1a\x1c.copytrade.OrderWithQuantity\"\x00(\x01\x30\x01\x12^\n\x12GetTradeSignalList\x12#.tradesignal.TradeSignalListRequest\x1a!.tradesignal.TradeSignalListReply\"\x00\x42\x18\xaa\x02\x15\x43sharpRPCLibrary.Grpcb\x06proto3')
  ,
  dependencies=[copytrade_dot_copytrade__pb2.DESCRIPTOR,tradesignal_dot_tradesignal__pb2.DESCRIPTOR,mt4api_dot_mt4api__pb2.DESCRIPTOR,])

_POSITIONTYPE = _descriptor.EnumDescriptor(
  name='PositionType',
  full_name='sam.PositionType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='Open', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='Update', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='Close', index=2, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=1505,
  serialized_end=1552,
)
_sym_db.RegisterEnumDescriptor(_POSITIONTYPE)

PositionType = enum_type_wrapper.EnumTypeWrapper(_POSITIONTYPE)
_SAMSIGNALSRVERRORS = _descriptor.EnumDescriptor(
  name='SamSignalSrvErrors',
  full_name='sam.SamSignalSrvErrors',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='None', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ErrInvalidAccountRequest', index=1, number=91001,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ErrClientNotExist', index=2, number=92001,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ErrInvestorMode', index=3, number=93001,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ErrNoQuote', index=4, number=93002,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ErrNoSymbolMatch', index=5, number=93003,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ErrAppNotFound', index=6, number=93004,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ErrAppInvalidStatus', index=7, number=93005,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ErrAppNoQuote', index=8, number=93006,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ErrAppOrderNotFound', index=9, number=93007,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=1555,
  serialized_end=1804,
)
_sym_db.RegisterEnumDescriptor(_SAMSIGNALSRVERRORS)

SamSignalSrvErrors = enum_type_wrapper.EnumTypeWrapper(_SAMSIGNALSRVERRORS)
Open = 0
Update = 1
Close = 2
#None = 0
ErrInvalidAccountRequest = 91001
ErrClientNotExist = 92001
ErrInvestorMode = 93001
ErrNoQuote = 93002
ErrNoSymbolMatch = 93003
ErrAppNotFound = 93004
ErrAppInvalidStatus = 93005
ErrAppNoQuote = 93006
ErrAppOrderNotFound = 93007



_ACCOUNTREQUEST = _descriptor.Descriptor(
  name='AccountRequest',
  full_name='sam.AccountRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='Account', full_name='sam.AccountRequest.Account', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='BrokerID', full_name='sam.AccountRequest.BrokerID', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='UserID', full_name='sam.AccountRequest.UserID', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Password', full_name='sam.AccountRequest.Password', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Status', full_name='sam.AccountRequest.Status', index=4,
      number=5, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Type', full_name='sam.AccountRequest.Type', index=5,
      number=6, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Time', full_name='sam.AccountRequest.Time', index=6,
      number=7, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='AppID', full_name='sam.AccountRequest.AppID', index=7,
      number=8, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='RequestID', full_name='sam.AccountRequest.RequestID', index=8,
      number=20, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=102,
  serialized_end=265,
)


_ASSET = _descriptor.Descriptor(
  name='Asset',
  full_name='sam.Asset',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='Account', full_name='sam.Asset.Account', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='BrokerID', full_name='sam.Asset.BrokerID', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Balance', full_name='sam.Asset.Balance', index=2,
      number=3, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Credit', full_name='sam.Asset.Credit', index=3,
      number=4, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='FreeMargin', full_name='sam.Asset.FreeMargin', index=4,
      number=5, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Profit', full_name='sam.Asset.Profit', index=5,
      number=6, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Equity', full_name='sam.Asset.Equity', index=6,
      number=7, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Leverage', full_name='sam.Asset.Leverage', index=7,
      number=8, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='MarginLevel', full_name='sam.Asset.MarginLevel', index=8,
      number=9, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Margin', full_name='sam.Asset.Margin', index=9,
      number=10, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ProfitLoss', full_name='sam.Asset.ProfitLoss', index=10,
      number=11, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='HistoryProfit', full_name='sam.Asset.HistoryProfit', index=11,
      number=12, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='HistorySwap', full_name='sam.Asset.HistorySwap', index=12,
      number=13, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=268,
  serialized_end=514,
)


_SYMBOLLISTREPLY = _descriptor.Descriptor(
  name='SymbolListReply',
  full_name='sam.SymbolListReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='List', full_name='sam.SymbolListReply.List', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Count', full_name='sam.SymbolListReply.Count', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='RequestID', full_name='sam.SymbolListReply.RequestID', index=2,
      number=10, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='RPCError', full_name='sam.SymbolListReply.RPCError', index=3,
      number=11, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=516,
  serialized_end=615,
)


_MT4CLIENT = _descriptor.Descriptor(
  name='MT4Client',
  full_name='sam.MT4Client',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='Init', full_name='sam.MT4Client.Init', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='LastHeartBeatTime', full_name='sam.MT4Client.LastHeartBeatTime', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='LastAssetTime', full_name='sam.MT4Client.LastAssetTime', index=2,
      number=3, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='UserID', full_name='sam.MT4Client.UserID', index=3,
      number=4, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='SyncTimeMin', full_name='sam.MT4Client.SyncTimeMin', index=4,
      number=5, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ClientID', full_name='sam.MT4Client.ClientID', index=5,
      number=6, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='SessionID', full_name='sam.MT4Client.SessionID', index=6,
      number=7, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Account', full_name='sam.MT4Client.Account', index=7,
      number=8, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='BrokerID', full_name='sam.MT4Client.BrokerID', index=8,
      number=9, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Server', full_name='sam.MT4Client.Server', index=9,
      number=10, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Company', full_name='sam.MT4Client.Company', index=10,
      number=11, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='MT4IsConnect', full_name='sam.MT4Client.MT4IsConnect', index=11,
      number=12, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='HisotryTotal', full_name='sam.MT4Client.HisotryTotal', index=12,
      number=13, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='MaxTradeID', full_name='sam.MT4Client.MaxTradeID', index=13,
      number=14, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=618,
  serialized_end=899,
)


_GETMT4CLIENTSREPLY = _descriptor.Descriptor(
  name='GetMT4ClientsReply',
  full_name='sam.GetMT4ClientsReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='List', full_name='sam.GetMT4ClientsReply.List', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Count', full_name='sam.GetMT4ClientsReply.Count', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=901,
  serialized_end=966,
)


_GETMT4CLIENTSREQUEST = _descriptor.Descriptor(
  name='GetMT4ClientsRequest',
  full_name='sam.GetMT4ClientsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='BrokerID', full_name='sam.GetMT4ClientsRequest.BrokerID', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Account', full_name='sam.GetMT4ClientsRequest.Account', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Mode', full_name='sam.GetMT4ClientsRequest.Mode', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=968,
  serialized_end=1039,
)


_SYNCTRADESREQUEST = _descriptor.Descriptor(
  name='SyncTradesRequest',
  full_name='sam.SyncTradesRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='Account', full_name='sam.SyncTradesRequest.Account', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='BrokerID', full_name='sam.SyncTradesRequest.BrokerID', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='StartTime', full_name='sam.SyncTradesRequest.StartTime', index=2,
      number=3, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='EndTime', full_name='sam.SyncTradesRequest.EndTime', index=3,
      number=4, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Status', full_name='sam.SyncTradesRequest.Status', index=4,
      number=5, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1041,
  serialized_end=1147,
)


_SYNCTRADESREPLY = _descriptor.Descriptor(
  name='SyncTradesReply',
  full_name='sam.SyncTradesReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='SyncTotal', full_name='sam.SyncTradesReply.SyncTotal', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1149,
  serialized_end=1185,
)


_SYNCHISTORYTRADESREPLY = _descriptor.Descriptor(
  name='SyncHistoryTradesReply',
  full_name='sam.SyncHistoryTradesReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='BeginIndex', full_name='sam.SyncHistoryTradesReply.BeginIndex', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='SyncTotal', full_name='sam.SyncHistoryTradesReply.SyncTotal', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1187,
  serialized_end=1250,
)


_EMPTY = _descriptor.Descriptor(
  name='Empty',
  full_name='sam.Empty',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1252,
  serialized_end=1259,
)


_SUCCESSREPLY = _descriptor.Descriptor(
  name='SuccessReply',
  full_name='sam.SuccessReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='Success', full_name='sam.SuccessReply.Success', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1261,
  serialized_end=1292,
)


_POSITIONREQUEST = _descriptor.Descriptor(
  name='PositionRequest',
  full_name='sam.PositionRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='TradeSignal', full_name='sam.PositionRequest.TradeSignal', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Type', full_name='sam.PositionRequest.Type', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1294,
  serialized_end=1391,
)


_POSITIONREPLY = _descriptor.Descriptor(
  name='PositionReply',
  full_name='sam.PositionReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='TradeSignal', full_name='sam.PositionReply.TradeSignal', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Type', full_name='sam.PositionReply.Type', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Error', full_name='sam.PositionReply.Error', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1393,
  serialized_end=1503,
)

_SYMBOLLISTREPLY.fields_by_name['List'].message_type = mt4api_dot_mt4api__pb2._SYMBOL
_GETMT4CLIENTSREPLY.fields_by_name['List'].message_type = _MT4CLIENT
_POSITIONREQUEST.fields_by_name['TradeSignal'].message_type = tradesignal_dot_tradesignal__pb2._TRADESIGNAL
_POSITIONREQUEST.fields_by_name['Type'].enum_type = _POSITIONTYPE
_POSITIONREPLY.fields_by_name['TradeSignal'].message_type = tradesignal_dot_tradesignal__pb2._TRADESIGNAL
_POSITIONREPLY.fields_by_name['Type'].enum_type = _POSITIONTYPE
DESCRIPTOR.message_types_by_name['AccountRequest'] = _ACCOUNTREQUEST
DESCRIPTOR.message_types_by_name['Asset'] = _ASSET
DESCRIPTOR.message_types_by_name['SymbolListReply'] = _SYMBOLLISTREPLY
DESCRIPTOR.message_types_by_name['MT4Client'] = _MT4CLIENT
DESCRIPTOR.message_types_by_name['GetMT4ClientsReply'] = _GETMT4CLIENTSREPLY
DESCRIPTOR.message_types_by_name['GetMT4ClientsRequest'] = _GETMT4CLIENTSREQUEST
DESCRIPTOR.message_types_by_name['SyncTradesRequest'] = _SYNCTRADESREQUEST
DESCRIPTOR.message_types_by_name['SyncTradesReply'] = _SYNCTRADESREPLY
DESCRIPTOR.message_types_by_name['SyncHistoryTradesReply'] = _SYNCHISTORYTRADESREPLY
DESCRIPTOR.message_types_by_name['Empty'] = _EMPTY
DESCRIPTOR.message_types_by_name['SuccessReply'] = _SUCCESSREPLY
DESCRIPTOR.message_types_by_name['PositionRequest'] = _POSITIONREQUEST
DESCRIPTOR.message_types_by_name['PositionReply'] = _POSITIONREPLY
DESCRIPTOR.enum_types_by_name['PositionType'] = _POSITIONTYPE
DESCRIPTOR.enum_types_by_name['SamSignalSrvErrors'] = _SAMSIGNALSRVERRORS
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

AccountRequest = _reflection.GeneratedProtocolMessageType('AccountRequest', (_message.Message,), dict(
  DESCRIPTOR = _ACCOUNTREQUEST,
  __module__ = 'sam.sam_pb2'
  # @@protoc_insertion_point(class_scope:sam.AccountRequest)
  ))
_sym_db.RegisterMessage(AccountRequest)

Asset = _reflection.GeneratedProtocolMessageType('Asset', (_message.Message,), dict(
  DESCRIPTOR = _ASSET,
  __module__ = 'sam.sam_pb2'
  # @@protoc_insertion_point(class_scope:sam.Asset)
  ))
_sym_db.RegisterMessage(Asset)

SymbolListReply = _reflection.GeneratedProtocolMessageType('SymbolListReply', (_message.Message,), dict(
  DESCRIPTOR = _SYMBOLLISTREPLY,
  __module__ = 'sam.sam_pb2'
  # @@protoc_insertion_point(class_scope:sam.SymbolListReply)
  ))
_sym_db.RegisterMessage(SymbolListReply)

MT4Client = _reflection.GeneratedProtocolMessageType('MT4Client', (_message.Message,), dict(
  DESCRIPTOR = _MT4CLIENT,
  __module__ = 'sam.sam_pb2'
  # @@protoc_insertion_point(class_scope:sam.MT4Client)
  ))
_sym_db.RegisterMessage(MT4Client)

GetMT4ClientsReply = _reflection.GeneratedProtocolMessageType('GetMT4ClientsReply', (_message.Message,), dict(
  DESCRIPTOR = _GETMT4CLIENTSREPLY,
  __module__ = 'sam.sam_pb2'
  # @@protoc_insertion_point(class_scope:sam.GetMT4ClientsReply)
  ))
_sym_db.RegisterMessage(GetMT4ClientsReply)

GetMT4ClientsRequest = _reflection.GeneratedProtocolMessageType('GetMT4ClientsRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETMT4CLIENTSREQUEST,
  __module__ = 'sam.sam_pb2'
  # @@protoc_insertion_point(class_scope:sam.GetMT4ClientsRequest)
  ))
_sym_db.RegisterMessage(GetMT4ClientsRequest)

SyncTradesRequest = _reflection.GeneratedProtocolMessageType('SyncTradesRequest', (_message.Message,), dict(
  DESCRIPTOR = _SYNCTRADESREQUEST,
  __module__ = 'sam.sam_pb2'
  # @@protoc_insertion_point(class_scope:sam.SyncTradesRequest)
  ))
_sym_db.RegisterMessage(SyncTradesRequest)

SyncTradesReply = _reflection.GeneratedProtocolMessageType('SyncTradesReply', (_message.Message,), dict(
  DESCRIPTOR = _SYNCTRADESREPLY,
  __module__ = 'sam.sam_pb2'
  # @@protoc_insertion_point(class_scope:sam.SyncTradesReply)
  ))
_sym_db.RegisterMessage(SyncTradesReply)

SyncHistoryTradesReply = _reflection.GeneratedProtocolMessageType('SyncHistoryTradesReply', (_message.Message,), dict(
  DESCRIPTOR = _SYNCHISTORYTRADESREPLY,
  __module__ = 'sam.sam_pb2'
  # @@protoc_insertion_point(class_scope:sam.SyncHistoryTradesReply)
  ))
_sym_db.RegisterMessage(SyncHistoryTradesReply)

Empty = _reflection.GeneratedProtocolMessageType('Empty', (_message.Message,), dict(
  DESCRIPTOR = _EMPTY,
  __module__ = 'sam.sam_pb2'
  # @@protoc_insertion_point(class_scope:sam.Empty)
  ))
_sym_db.RegisterMessage(Empty)

SuccessReply = _reflection.GeneratedProtocolMessageType('SuccessReply', (_message.Message,), dict(
  DESCRIPTOR = _SUCCESSREPLY,
  __module__ = 'sam.sam_pb2'
  # @@protoc_insertion_point(class_scope:sam.SuccessReply)
  ))
_sym_db.RegisterMessage(SuccessReply)

PositionRequest = _reflection.GeneratedProtocolMessageType('PositionRequest', (_message.Message,), dict(
  DESCRIPTOR = _POSITIONREQUEST,
  __module__ = 'sam.sam_pb2'
  # @@protoc_insertion_point(class_scope:sam.PositionRequest)
  ))
_sym_db.RegisterMessage(PositionRequest)

PositionReply = _reflection.GeneratedProtocolMessageType('PositionReply', (_message.Message,), dict(
  DESCRIPTOR = _POSITIONREPLY,
  __module__ = 'sam.sam_pb2'
  # @@protoc_insertion_point(class_scope:sam.PositionReply)
  ))
_sym_db.RegisterMessage(PositionReply)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('\252\002\025CsharpRPCLibrary.Grpc'))

_SAMSIGNALSRV = _descriptor.ServiceDescriptor(
  name='SamSignalSrv',
  full_name='sam.SamSignalSrv',
  file=DESCRIPTOR,
  index=0,
  options=None,
  serialized_start=1807,
  serialized_end=2742,
  methods=[
  _descriptor.MethodDescriptor(
    name='GetAssetByAccount',
    full_name='sam.SamSignalSrv.GetAssetByAccount',
    index=0,
    containing_service=None,
    input_type=_ACCOUNTREQUEST,
    output_type=_ASSET,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetSymbolListByAccount',
    full_name='sam.SamSignalSrv.GetSymbolListByAccount',
    index=1,
    containing_service=None,
    input_type=_ACCOUNTREQUEST,
    output_type=_SYMBOLLISTREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetSymbolListByAccountStream',
    full_name='sam.SamSignalSrv.GetSymbolListByAccountStream',
    index=2,
    containing_service=None,
    input_type=_ACCOUNTREQUEST,
    output_type=_SYMBOLLISTREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='SubscribeTradeSignal',
    full_name='sam.SamSignalSrv.SubscribeTradeSignal',
    index=3,
    containing_service=None,
    input_type=_EMPTY,
    output_type=tradesignal_dot_tradesignal__pb2._TRADESIGNAL,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetMT4Clients',
    full_name='sam.SamSignalSrv.GetMT4Clients',
    index=4,
    containing_service=None,
    input_type=_GETMT4CLIENTSREQUEST,
    output_type=_GETMT4CLIENTSREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='SyncTrades',
    full_name='sam.SamSignalSrv.SyncTrades',
    index=5,
    containing_service=None,
    input_type=_SYNCTRADESREQUEST,
    output_type=_SYNCTRADESREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='SyncHistoryTrades',
    full_name='sam.SamSignalSrv.SyncHistoryTrades',
    index=6,
    containing_service=None,
    input_type=_ACCOUNTREQUEST,
    output_type=_SYNCHISTORYTRADESREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='NotifyBindAccount',
    full_name='sam.SamSignalSrv.NotifyBindAccount',
    index=7,
    containing_service=None,
    input_type=_ACCOUNTREQUEST,
    output_type=_SUCCESSREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='NotifyInvalidAccount',
    full_name='sam.SamSignalSrv.NotifyInvalidAccount',
    index=8,
    containing_service=None,
    input_type=_ACCOUNTREQUEST,
    output_type=_SUCCESSREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='Position',
    full_name='sam.SamSignalSrv.Position',
    index=9,
    containing_service=None,
    input_type=_POSITIONREQUEST,
    output_type=_POSITIONREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='CopyTrade',
    full_name='sam.SamSignalSrv.CopyTrade',
    index=10,
    containing_service=None,
    input_type=copytrade_dot_copytrade__pb2._ORDERWITHQUANTITY,
    output_type=copytrade_dot_copytrade__pb2._ORDERWITHQUANTITY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='CopyTradeStream',
    full_name='sam.SamSignalSrv.CopyTradeStream',
    index=11,
    containing_service=None,
    input_type=copytrade_dot_copytrade__pb2._ORDERWITHQUANTITY,
    output_type=copytrade_dot_copytrade__pb2._ORDERWITHQUANTITY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetTradeSignalList',
    full_name='sam.SamSignalSrv.GetTradeSignalList',
    index=12,
    containing_service=None,
    input_type=tradesignal_dot_tradesignal__pb2._TRADESIGNALLISTREQUEST,
    output_type=tradesignal_dot_tradesignal__pb2._TRADESIGNALLISTREPLY,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_SAMSIGNALSRV)

DESCRIPTOR.services_by_name['SamSignalSrv'] = _SAMSIGNALSRV

try:
  # THESE ELEMENTS WILL BE DEPRECATED.
  # Please use the generated *_pb2_grpc.py files instead.
  import grpc
  from grpc.beta import implementations as beta_implementations
  from grpc.beta import interfaces as beta_interfaces
  from grpc.framework.common import cardinality
  from grpc.framework.interfaces.face import utilities as face_utilities


  class SamSignalSrvStub(object):
    # missing associated documentation comment in .proto file
    pass

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.GetAssetByAccount = channel.unary_unary(
          '/sam.SamSignalSrv/GetAssetByAccount',
          request_serializer=AccountRequest.SerializeToString,
          response_deserializer=Asset.FromString,
          )
      self.GetSymbolListByAccount = channel.unary_unary(
          '/sam.SamSignalSrv/GetSymbolListByAccount',
          request_serializer=AccountRequest.SerializeToString,
          response_deserializer=SymbolListReply.FromString,
          )
      self.GetSymbolListByAccountStream = channel.stream_stream(
          '/sam.SamSignalSrv/GetSymbolListByAccountStream',
          request_serializer=AccountRequest.SerializeToString,
          response_deserializer=SymbolListReply.FromString,
          )
      self.SubscribeTradeSignal = channel.unary_stream(
          '/sam.SamSignalSrv/SubscribeTradeSignal',
          request_serializer=Empty.SerializeToString,
          response_deserializer=tradesignal_dot_tradesignal__pb2.TradeSignal.FromString,
          )
      self.GetMT4Clients = channel.unary_unary(
          '/sam.SamSignalSrv/GetMT4Clients',
          request_serializer=GetMT4ClientsRequest.SerializeToString,
          response_deserializer=GetMT4ClientsReply.FromString,
          )
      self.SyncTrades = channel.unary_unary(
          '/sam.SamSignalSrv/SyncTrades',
          request_serializer=SyncTradesRequest.SerializeToString,
          response_deserializer=SyncTradesReply.FromString,
          )
      self.SyncHistoryTrades = channel.unary_unary(
          '/sam.SamSignalSrv/SyncHistoryTrades',
          request_serializer=AccountRequest.SerializeToString,
          response_deserializer=SyncHistoryTradesReply.FromString,
          )
      self.NotifyBindAccount = channel.unary_unary(
          '/sam.SamSignalSrv/NotifyBindAccount',
          request_serializer=AccountRequest.SerializeToString,
          response_deserializer=SuccessReply.FromString,
          )
      self.NotifyInvalidAccount = channel.unary_unary(
          '/sam.SamSignalSrv/NotifyInvalidAccount',
          request_serializer=AccountRequest.SerializeToString,
          response_deserializer=SuccessReply.FromString,
          )
      self.Position = channel.unary_unary(
          '/sam.SamSignalSrv/Position',
          request_serializer=PositionRequest.SerializeToString,
          response_deserializer=PositionReply.FromString,
          )
      self.CopyTrade = channel.unary_unary(
          '/sam.SamSignalSrv/CopyTrade',
          request_serializer=copytrade_dot_copytrade__pb2.OrderWithQuantity.SerializeToString,
          response_deserializer=copytrade_dot_copytrade__pb2.OrderWithQuantity.FromString,
          )
      self.CopyTradeStream = channel.stream_stream(
          '/sam.SamSignalSrv/CopyTradeStream',
          request_serializer=copytrade_dot_copytrade__pb2.OrderWithQuantity.SerializeToString,
          response_deserializer=copytrade_dot_copytrade__pb2.OrderWithQuantity.FromString,
          )
      self.GetTradeSignalList = channel.unary_unary(
          '/sam.SamSignalSrv/GetTradeSignalList',
          request_serializer=tradesignal_dot_tradesignal__pb2.TradeSignalListRequest.SerializeToString,
          response_deserializer=tradesignal_dot_tradesignal__pb2.TradeSignalListReply.FromString,
          )


  class SamSignalSrvServicer(object):
    # missing associated documentation comment in .proto file
    pass

    def GetAssetByAccount(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetSymbolListByAccount(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetSymbolListByAccountStream(self, request_iterator, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def SubscribeTradeSignal(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetMT4Clients(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def SyncTrades(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def SyncHistoryTrades(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def NotifyBindAccount(self, request, context):
      """绑定成功通知
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def NotifyInvalidAccount(self, request, context):
      """密码变更通知
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def Position(self, request, context):
      """下单
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def CopyTrade(self, request, context):
      """交易 (Fake 😁)
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def CopyTradeStream(self, request_iterator, context):
      """跟单交易
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetTradeSignalList(self, request, context):
      """获取帐户所有订单
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_SamSignalSrvServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'GetAssetByAccount': grpc.unary_unary_rpc_method_handler(
            servicer.GetAssetByAccount,
            request_deserializer=AccountRequest.FromString,
            response_serializer=Asset.SerializeToString,
        ),
        'GetSymbolListByAccount': grpc.unary_unary_rpc_method_handler(
            servicer.GetSymbolListByAccount,
            request_deserializer=AccountRequest.FromString,
            response_serializer=SymbolListReply.SerializeToString,
        ),
        'GetSymbolListByAccountStream': grpc.stream_stream_rpc_method_handler(
            servicer.GetSymbolListByAccountStream,
            request_deserializer=AccountRequest.FromString,
            response_serializer=SymbolListReply.SerializeToString,
        ),
        'SubscribeTradeSignal': grpc.unary_stream_rpc_method_handler(
            servicer.SubscribeTradeSignal,
            request_deserializer=Empty.FromString,
            response_serializer=tradesignal_dot_tradesignal__pb2.TradeSignal.SerializeToString,
        ),
        'GetMT4Clients': grpc.unary_unary_rpc_method_handler(
            servicer.GetMT4Clients,
            request_deserializer=GetMT4ClientsRequest.FromString,
            response_serializer=GetMT4ClientsReply.SerializeToString,
        ),
        'SyncTrades': grpc.unary_unary_rpc_method_handler(
            servicer.SyncTrades,
            request_deserializer=SyncTradesRequest.FromString,
            response_serializer=SyncTradesReply.SerializeToString,
        ),
        'SyncHistoryTrades': grpc.unary_unary_rpc_method_handler(
            servicer.SyncHistoryTrades,
            request_deserializer=AccountRequest.FromString,
            response_serializer=SyncHistoryTradesReply.SerializeToString,
        ),
        'NotifyBindAccount': grpc.unary_unary_rpc_method_handler(
            servicer.NotifyBindAccount,
            request_deserializer=AccountRequest.FromString,
            response_serializer=SuccessReply.SerializeToString,
        ),
        'NotifyInvalidAccount': grpc.unary_unary_rpc_method_handler(
            servicer.NotifyInvalidAccount,
            request_deserializer=AccountRequest.FromString,
            response_serializer=SuccessReply.SerializeToString,
        ),
        'Position': grpc.unary_unary_rpc_method_handler(
            servicer.Position,
            request_deserializer=PositionRequest.FromString,
            response_serializer=PositionReply.SerializeToString,
        ),
        'CopyTrade': grpc.unary_unary_rpc_method_handler(
            servicer.CopyTrade,
            request_deserializer=copytrade_dot_copytrade__pb2.OrderWithQuantity.FromString,
            response_serializer=copytrade_dot_copytrade__pb2.OrderWithQuantity.SerializeToString,
        ),
        'CopyTradeStream': grpc.stream_stream_rpc_method_handler(
            servicer.CopyTradeStream,
            request_deserializer=copytrade_dot_copytrade__pb2.OrderWithQuantity.FromString,
            response_serializer=copytrade_dot_copytrade__pb2.OrderWithQuantity.SerializeToString,
        ),
        'GetTradeSignalList': grpc.unary_unary_rpc_method_handler(
            servicer.GetTradeSignalList,
            request_deserializer=tradesignal_dot_tradesignal__pb2.TradeSignalListRequest.FromString,
            response_serializer=tradesignal_dot_tradesignal__pb2.TradeSignalListReply.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'sam.SamSignalSrv', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class BetaSamSignalSrvServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def GetAssetByAccount(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetSymbolListByAccount(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetSymbolListByAccountStream(self, request_iterator, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def SubscribeTradeSignal(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetMT4Clients(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def SyncTrades(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def SyncHistoryTrades(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def NotifyBindAccount(self, request, context):
      """绑定成功通知
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def NotifyInvalidAccount(self, request, context):
      """密码变更通知
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def Position(self, request, context):
      """下单
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def CopyTrade(self, request, context):
      """交易 (Fake 😁)
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def CopyTradeStream(self, request_iterator, context):
      """跟单交易
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetTradeSignalList(self, request, context):
      """获取帐户所有订单
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaSamSignalSrvStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def GetAssetByAccount(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetAssetByAccount.future = None
    def GetSymbolListByAccount(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetSymbolListByAccount.future = None
    def GetSymbolListByAccountStream(self, request_iterator, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def SubscribeTradeSignal(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def GetMT4Clients(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetMT4Clients.future = None
    def SyncTrades(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    SyncTrades.future = None
    def SyncHistoryTrades(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    SyncHistoryTrades.future = None
    def NotifyBindAccount(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """绑定成功通知
      """
      raise NotImplementedError()
    NotifyBindAccount.future = None
    def NotifyInvalidAccount(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """密码变更通知
      """
      raise NotImplementedError()
    NotifyInvalidAccount.future = None
    def Position(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """下单
      """
      raise NotImplementedError()
    Position.future = None
    def CopyTrade(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """交易 (Fake 😁)
      """
      raise NotImplementedError()
    CopyTrade.future = None
    def CopyTradeStream(self, request_iterator, timeout, metadata=None, with_call=False, protocol_options=None):
      """跟单交易
      """
      raise NotImplementedError()
    def GetTradeSignalList(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """获取帐户所有订单
      """
      raise NotImplementedError()
    GetTradeSignalList.future = None


  def beta_create_SamSignalSrv_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('sam.SamSignalSrv', 'CopyTrade'): copytrade_dot_copytrade__pb2.OrderWithQuantity.FromString,
      ('sam.SamSignalSrv', 'CopyTradeStream'): copytrade_dot_copytrade__pb2.OrderWithQuantity.FromString,
      ('sam.SamSignalSrv', 'GetAssetByAccount'): AccountRequest.FromString,
      ('sam.SamSignalSrv', 'GetMT4Clients'): GetMT4ClientsRequest.FromString,
      ('sam.SamSignalSrv', 'GetSymbolListByAccount'): AccountRequest.FromString,
      ('sam.SamSignalSrv', 'GetSymbolListByAccountStream'): AccountRequest.FromString,
      ('sam.SamSignalSrv', 'GetTradeSignalList'): tradesignal_dot_tradesignal__pb2.TradeSignalListRequest.FromString,
      ('sam.SamSignalSrv', 'NotifyBindAccount'): AccountRequest.FromString,
      ('sam.SamSignalSrv', 'NotifyInvalidAccount'): AccountRequest.FromString,
      ('sam.SamSignalSrv', 'Position'): PositionRequest.FromString,
      ('sam.SamSignalSrv', 'SubscribeTradeSignal'): Empty.FromString,
      ('sam.SamSignalSrv', 'SyncHistoryTrades'): AccountRequest.FromString,
      ('sam.SamSignalSrv', 'SyncTrades'): SyncTradesRequest.FromString,
    }
    response_serializers = {
      ('sam.SamSignalSrv', 'CopyTrade'): copytrade_dot_copytrade__pb2.OrderWithQuantity.SerializeToString,
      ('sam.SamSignalSrv', 'CopyTradeStream'): copytrade_dot_copytrade__pb2.OrderWithQuantity.SerializeToString,
      ('sam.SamSignalSrv', 'GetAssetByAccount'): Asset.SerializeToString,
      ('sam.SamSignalSrv', 'GetMT4Clients'): GetMT4ClientsReply.SerializeToString,
      ('sam.SamSignalSrv', 'GetSymbolListByAccount'): SymbolListReply.SerializeToString,
      ('sam.SamSignalSrv', 'GetSymbolListByAccountStream'): SymbolListReply.SerializeToString,
      ('sam.SamSignalSrv', 'GetTradeSignalList'): tradesignal_dot_tradesignal__pb2.TradeSignalListReply.SerializeToString,
      ('sam.SamSignalSrv', 'NotifyBindAccount'): SuccessReply.SerializeToString,
      ('sam.SamSignalSrv', 'NotifyInvalidAccount'): SuccessReply.SerializeToString,
      ('sam.SamSignalSrv', 'Position'): PositionReply.SerializeToString,
      ('sam.SamSignalSrv', 'SubscribeTradeSignal'): tradesignal_dot_tradesignal__pb2.TradeSignal.SerializeToString,
      ('sam.SamSignalSrv', 'SyncHistoryTrades'): SyncHistoryTradesReply.SerializeToString,
      ('sam.SamSignalSrv', 'SyncTrades'): SyncTradesReply.SerializeToString,
    }
    method_implementations = {
      ('sam.SamSignalSrv', 'CopyTrade'): face_utilities.unary_unary_inline(servicer.CopyTrade),
      ('sam.SamSignalSrv', 'CopyTradeStream'): face_utilities.stream_stream_inline(servicer.CopyTradeStream),
      ('sam.SamSignalSrv', 'GetAssetByAccount'): face_utilities.unary_unary_inline(servicer.GetAssetByAccount),
      ('sam.SamSignalSrv', 'GetMT4Clients'): face_utilities.unary_unary_inline(servicer.GetMT4Clients),
      ('sam.SamSignalSrv', 'GetSymbolListByAccount'): face_utilities.unary_unary_inline(servicer.GetSymbolListByAccount),
      ('sam.SamSignalSrv', 'GetSymbolListByAccountStream'): face_utilities.stream_stream_inline(servicer.GetSymbolListByAccountStream),
      ('sam.SamSignalSrv', 'GetTradeSignalList'): face_utilities.unary_unary_inline(servicer.GetTradeSignalList),
      ('sam.SamSignalSrv', 'NotifyBindAccount'): face_utilities.unary_unary_inline(servicer.NotifyBindAccount),
      ('sam.SamSignalSrv', 'NotifyInvalidAccount'): face_utilities.unary_unary_inline(servicer.NotifyInvalidAccount),
      ('sam.SamSignalSrv', 'Position'): face_utilities.unary_unary_inline(servicer.Position),
      ('sam.SamSignalSrv', 'SubscribeTradeSignal'): face_utilities.unary_stream_inline(servicer.SubscribeTradeSignal),
      ('sam.SamSignalSrv', 'SyncHistoryTrades'): face_utilities.unary_unary_inline(servicer.SyncHistoryTrades),
      ('sam.SamSignalSrv', 'SyncTrades'): face_utilities.unary_unary_inline(servicer.SyncTrades),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_SamSignalSrv_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('sam.SamSignalSrv', 'CopyTrade'): copytrade_dot_copytrade__pb2.OrderWithQuantity.SerializeToString,
      ('sam.SamSignalSrv', 'CopyTradeStream'): copytrade_dot_copytrade__pb2.OrderWithQuantity.SerializeToString,
      ('sam.SamSignalSrv', 'GetAssetByAccount'): AccountRequest.SerializeToString,
      ('sam.SamSignalSrv', 'GetMT4Clients'): GetMT4ClientsRequest.SerializeToString,
      ('sam.SamSignalSrv', 'GetSymbolListByAccount'): AccountRequest.SerializeToString,
      ('sam.SamSignalSrv', 'GetSymbolListByAccountStream'): AccountRequest.SerializeToString,
      ('sam.SamSignalSrv', 'GetTradeSignalList'): tradesignal_dot_tradesignal__pb2.TradeSignalListRequest.SerializeToString,
      ('sam.SamSignalSrv', 'NotifyBindAccount'): AccountRequest.SerializeToString,
      ('sam.SamSignalSrv', 'NotifyInvalidAccount'): AccountRequest.SerializeToString,
      ('sam.SamSignalSrv', 'Position'): PositionRequest.SerializeToString,
      ('sam.SamSignalSrv', 'SubscribeTradeSignal'): Empty.SerializeToString,
      ('sam.SamSignalSrv', 'SyncHistoryTrades'): AccountRequest.SerializeToString,
      ('sam.SamSignalSrv', 'SyncTrades'): SyncTradesRequest.SerializeToString,
    }
    response_deserializers = {
      ('sam.SamSignalSrv', 'CopyTrade'): copytrade_dot_copytrade__pb2.OrderWithQuantity.FromString,
      ('sam.SamSignalSrv', 'CopyTradeStream'): copytrade_dot_copytrade__pb2.OrderWithQuantity.FromString,
      ('sam.SamSignalSrv', 'GetAssetByAccount'): Asset.FromString,
      ('sam.SamSignalSrv', 'GetMT4Clients'): GetMT4ClientsReply.FromString,
      ('sam.SamSignalSrv', 'GetSymbolListByAccount'): SymbolListReply.FromString,
      ('sam.SamSignalSrv', 'GetSymbolListByAccountStream'): SymbolListReply.FromString,
      ('sam.SamSignalSrv', 'GetTradeSignalList'): tradesignal_dot_tradesignal__pb2.TradeSignalListReply.FromString,
      ('sam.SamSignalSrv', 'NotifyBindAccount'): SuccessReply.FromString,
      ('sam.SamSignalSrv', 'NotifyInvalidAccount'): SuccessReply.FromString,
      ('sam.SamSignalSrv', 'Position'): PositionReply.FromString,
      ('sam.SamSignalSrv', 'SubscribeTradeSignal'): tradesignal_dot_tradesignal__pb2.TradeSignal.FromString,
      ('sam.SamSignalSrv', 'SyncHistoryTrades'): SyncHistoryTradesReply.FromString,
      ('sam.SamSignalSrv', 'SyncTrades'): SyncTradesReply.FromString,
    }
    cardinalities = {
      'CopyTrade': cardinality.Cardinality.UNARY_UNARY,
      'CopyTradeStream': cardinality.Cardinality.STREAM_STREAM,
      'GetAssetByAccount': cardinality.Cardinality.UNARY_UNARY,
      'GetMT4Clients': cardinality.Cardinality.UNARY_UNARY,
      'GetSymbolListByAccount': cardinality.Cardinality.UNARY_UNARY,
      'GetSymbolListByAccountStream': cardinality.Cardinality.STREAM_STREAM,
      'GetTradeSignalList': cardinality.Cardinality.UNARY_UNARY,
      'NotifyBindAccount': cardinality.Cardinality.UNARY_UNARY,
      'NotifyInvalidAccount': cardinality.Cardinality.UNARY_UNARY,
      'Position': cardinality.Cardinality.UNARY_UNARY,
      'SubscribeTradeSignal': cardinality.Cardinality.UNARY_STREAM,
      'SyncHistoryTrades': cardinality.Cardinality.UNARY_UNARY,
      'SyncTrades': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'sam.SamSignalSrv', cardinalities, options=stub_options)
except ImportError:
  pass
# @@protoc_insertion_point(module_scope)
