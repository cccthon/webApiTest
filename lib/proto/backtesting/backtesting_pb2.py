# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: backtesting/backtesting.proto
import sys
sys.path.append("../../proto")

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from copytrade import copytrade_pb2 as copytrade_dot_copytrade__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='backtesting/backtesting.proto',
  package='backtesting',
  syntax='proto3',
  serialized_pb=_b('\n\x1d\x62\x61\x63ktesting/backtesting.proto\x12\x0b\x62\x61\x63ktesting\x1a\x19\x63opytrade/copytrade.proto\"l\n\x17\x42\x61\x63ktestingTradeRequest\x12\x1f\n\x05Trade\x18\x01 \x01(\x0b\x32\x10.copytrade.Trade\x12\x10\n\x08\x42rokerID\x18\x02 \x01(\x05\x12\x10\n\x08Strategy\x18\x03 \x01(\x05\x12\x0c\n\x04Size\x18\x04 \x01(\x01\"<\n\x18\x42\x61\x63ktestingTradeResponse\x12 \n\x04List\x18\x01 \x03(\x0b\x32\x12.backtesting.Chart\"h\n\x16\x42\x61\x63ktestingUserRequest\x12\x10\n\x08\x42rokerID\x18\x01 \x01(\x05\x12\x0f\n\x07\x41\x63\x63ount\x18\x02 \x01(\t\x12\x0c\n\x04\x46rom\x18\x03 \x01(\x03\x12\n\n\x02To\x18\x04 \x01(\x03\x12\x11\n\tTimeRange\x18\x05 \x01(\x03\"$\n\x05\x43hart\x12\r\n\x05Value\x18\x01 \x01(\x01\x12\x0c\n\x04Time\x18\x02 \x01(\x03\"5\n\x06\x43hange\x12\x0c\n\x04Time\x18\x01 \x01(\x03\x12\x0e\n\x06\x42\x65\x66ore\x18\x02 \x01(\x01\x12\r\n\x05\x41\x66ter\x18\x03 \x01(\x01\"\xc3\x01\n\x17\x42\x61\x63ktestingUserResponse\x12&\n\nEquityList\x18\x01 \x03(\x0b\x32\x12.backtesting.Chart\x12\'\n\x0b\x42\x61lanceList\x18\x02 \x03(\x0b\x32\x12.backtesting.Chart\x12\'\n\x0b\x44\x65positList\x18\x03 \x03(\x0b\x32\x12.backtesting.Chart\x12.\n\x11\x44\x65positChangeList\x18\x04 \x03(\x0b\x32\x13.backtesting.Change\"R\n\x19\x42\x61\x63ktestingUserCSVRequest\x12\x35\n\x08UserList\x18\x01 \x03(\x0b\x32#.backtesting.BacktestingUserRequest*b\n\x14\x42\x61\x63ktestingSrvErrors\x12\x08\n\x04None\x10\x00\x12\x1d\n\x17\x45rrBrokerSymbolNotFound\x10\x91\x92\x14\x12!\n\x1b\x45rrStandardSymbolNotSupport\x10\x92\x92\x14\x32\xa5\x02\n\x0e\x42\x61\x63ktestingSrv\x12\x61\n\x10\x42\x61\x63ktestingTrade\x12$.backtesting.BacktestingTradeRequest\x1a%.backtesting.BacktestingTradeResponse\"\x00\x12^\n\x0f\x42\x61\x63ktestingUser\x12#.backtesting.BacktestingUserRequest\x1a$.backtesting.BacktestingUserResponse\"\x00\x12P\n\x12\x42\x61\x63ktestingUserCSV\x12&.backtesting.BacktestingUserCSVRequest\x1a\x10.copytrade.Empty\"\x00\x42\x18\xaa\x02\x15\x43sharpRPCLibrary.Grpcb\x06proto3')
  ,
  dependencies=[copytrade_dot_copytrade__pb2.DESCRIPTOR,])

_BACKTESTINGSRVERRORS = _descriptor.EnumDescriptor(
  name='BacktestingSrvErrors',
  full_name='backtesting.BacktestingSrvErrors',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='None', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ErrBrokerSymbolNotFound', index=1, number=330001,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ErrStandardSymbolNotSupport', index=2, number=330002,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=726,
  serialized_end=824,
)
_sym_db.RegisterEnumDescriptor(_BACKTESTINGSRVERRORS)

BacktestingSrvErrors = enum_type_wrapper.EnumTypeWrapper(_BACKTESTINGSRVERRORS)
#None = 0
ErrBrokerSymbolNotFound = 330001
ErrStandardSymbolNotSupport = 330002



_BACKTESTINGTRADEREQUEST = _descriptor.Descriptor(
  name='BacktestingTradeRequest',
  full_name='backtesting.BacktestingTradeRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='Trade', full_name='backtesting.BacktestingTradeRequest.Trade', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='BrokerID', full_name='backtesting.BacktestingTradeRequest.BrokerID', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='Strategy', full_name='backtesting.BacktestingTradeRequest.Strategy', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='Size', full_name='backtesting.BacktestingTradeRequest.Size', index=3,
      number=4, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=73,
  serialized_end=181,
)


_BACKTESTINGTRADERESPONSE = _descriptor.Descriptor(
  name='BacktestingTradeResponse',
  full_name='backtesting.BacktestingTradeResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='List', full_name='backtesting.BacktestingTradeResponse.List', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=183,
  serialized_end=243,
)


_BACKTESTINGUSERREQUEST = _descriptor.Descriptor(
  name='BacktestingUserRequest',
  full_name='backtesting.BacktestingUserRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='BrokerID', full_name='backtesting.BacktestingUserRequest.BrokerID', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='Account', full_name='backtesting.BacktestingUserRequest.Account', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='From', full_name='backtesting.BacktestingUserRequest.From', index=2,
      number=3, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='To', full_name='backtesting.BacktestingUserRequest.To', index=3,
      number=4, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='TimeRange', full_name='backtesting.BacktestingUserRequest.TimeRange', index=4,
      number=5, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=245,
  serialized_end=349,
)


_CHART = _descriptor.Descriptor(
  name='Chart',
  full_name='backtesting.Chart',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='Value', full_name='backtesting.Chart.Value', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='Time', full_name='backtesting.Chart.Time', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=351,
  serialized_end=387,
)


_CHANGE = _descriptor.Descriptor(
  name='Change',
  full_name='backtesting.Change',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='Time', full_name='backtesting.Change.Time', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='Before', full_name='backtesting.Change.Before', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='After', full_name='backtesting.Change.After', index=2,
      number=3, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=389,
  serialized_end=442,
)


_BACKTESTINGUSERRESPONSE = _descriptor.Descriptor(
  name='BacktestingUserResponse',
  full_name='backtesting.BacktestingUserResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='EquityList', full_name='backtesting.BacktestingUserResponse.EquityList', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='BalanceList', full_name='backtesting.BacktestingUserResponse.BalanceList', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='DepositList', full_name='backtesting.BacktestingUserResponse.DepositList', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='DepositChangeList', full_name='backtesting.BacktestingUserResponse.DepositChangeList', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=445,
  serialized_end=640,
)


_BACKTESTINGUSERCSVREQUEST = _descriptor.Descriptor(
  name='BacktestingUserCSVRequest',
  full_name='backtesting.BacktestingUserCSVRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='UserList', full_name='backtesting.BacktestingUserCSVRequest.UserList', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=642,
  serialized_end=724,
)

_BACKTESTINGTRADEREQUEST.fields_by_name['Trade'].message_type = copytrade_dot_copytrade__pb2._TRADE
_BACKTESTINGTRADERESPONSE.fields_by_name['List'].message_type = _CHART
_BACKTESTINGUSERRESPONSE.fields_by_name['EquityList'].message_type = _CHART
_BACKTESTINGUSERRESPONSE.fields_by_name['BalanceList'].message_type = _CHART
_BACKTESTINGUSERRESPONSE.fields_by_name['DepositList'].message_type = _CHART
_BACKTESTINGUSERRESPONSE.fields_by_name['DepositChangeList'].message_type = _CHANGE
_BACKTESTINGUSERCSVREQUEST.fields_by_name['UserList'].message_type = _BACKTESTINGUSERREQUEST
DESCRIPTOR.message_types_by_name['BacktestingTradeRequest'] = _BACKTESTINGTRADEREQUEST
DESCRIPTOR.message_types_by_name['BacktestingTradeResponse'] = _BACKTESTINGTRADERESPONSE
DESCRIPTOR.message_types_by_name['BacktestingUserRequest'] = _BACKTESTINGUSERREQUEST
DESCRIPTOR.message_types_by_name['Chart'] = _CHART
DESCRIPTOR.message_types_by_name['Change'] = _CHANGE
DESCRIPTOR.message_types_by_name['BacktestingUserResponse'] = _BACKTESTINGUSERRESPONSE
DESCRIPTOR.message_types_by_name['BacktestingUserCSVRequest'] = _BACKTESTINGUSERCSVREQUEST
DESCRIPTOR.enum_types_by_name['BacktestingSrvErrors'] = _BACKTESTINGSRVERRORS
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

BacktestingTradeRequest = _reflection.GeneratedProtocolMessageType('BacktestingTradeRequest', (_message.Message,), dict(
  DESCRIPTOR = _BACKTESTINGTRADEREQUEST,
  __module__ = 'backtesting.backtesting_pb2'
  # @@protoc_insertion_point(class_scope:backtesting.BacktestingTradeRequest)
  ))
_sym_db.RegisterMessage(BacktestingTradeRequest)

BacktestingTradeResponse = _reflection.GeneratedProtocolMessageType('BacktestingTradeResponse', (_message.Message,), dict(
  DESCRIPTOR = _BACKTESTINGTRADERESPONSE,
  __module__ = 'backtesting.backtesting_pb2'
  # @@protoc_insertion_point(class_scope:backtesting.BacktestingTradeResponse)
  ))
_sym_db.RegisterMessage(BacktestingTradeResponse)

BacktestingUserRequest = _reflection.GeneratedProtocolMessageType('BacktestingUserRequest', (_message.Message,), dict(
  DESCRIPTOR = _BACKTESTINGUSERREQUEST,
  __module__ = 'backtesting.backtesting_pb2'
  # @@protoc_insertion_point(class_scope:backtesting.BacktestingUserRequest)
  ))
_sym_db.RegisterMessage(BacktestingUserRequest)

Chart = _reflection.GeneratedProtocolMessageType('Chart', (_message.Message,), dict(
  DESCRIPTOR = _CHART,
  __module__ = 'backtesting.backtesting_pb2'
  # @@protoc_insertion_point(class_scope:backtesting.Chart)
  ))
_sym_db.RegisterMessage(Chart)

Change = _reflection.GeneratedProtocolMessageType('Change', (_message.Message,), dict(
  DESCRIPTOR = _CHANGE,
  __module__ = 'backtesting.backtesting_pb2'
  # @@protoc_insertion_point(class_scope:backtesting.Change)
  ))
_sym_db.RegisterMessage(Change)

BacktestingUserResponse = _reflection.GeneratedProtocolMessageType('BacktestingUserResponse', (_message.Message,), dict(
  DESCRIPTOR = _BACKTESTINGUSERRESPONSE,
  __module__ = 'backtesting.backtesting_pb2'
  # @@protoc_insertion_point(class_scope:backtesting.BacktestingUserResponse)
  ))
_sym_db.RegisterMessage(BacktestingUserResponse)

BacktestingUserCSVRequest = _reflection.GeneratedProtocolMessageType('BacktestingUserCSVRequest', (_message.Message,), dict(
  DESCRIPTOR = _BACKTESTINGUSERCSVREQUEST,
  __module__ = 'backtesting.backtesting_pb2'
  # @@protoc_insertion_point(class_scope:backtesting.BacktestingUserCSVRequest)
  ))
_sym_db.RegisterMessage(BacktestingUserCSVRequest)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('\252\002\025CsharpRPCLibrary.Grpc'))

_BACKTESTINGSRV = _descriptor.ServiceDescriptor(
  name='BacktestingSrv',
  full_name='backtesting.BacktestingSrv',
  file=DESCRIPTOR,
  index=0,
  options=None,
  serialized_start=827,
  serialized_end=1120,
  methods=[
  _descriptor.MethodDescriptor(
    name='BacktestingTrade',
    full_name='backtesting.BacktestingSrv.BacktestingTrade',
    index=0,
    containing_service=None,
    input_type=_BACKTESTINGTRADEREQUEST,
    output_type=_BACKTESTINGTRADERESPONSE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='BacktestingUser',
    full_name='backtesting.BacktestingSrv.BacktestingUser',
    index=1,
    containing_service=None,
    input_type=_BACKTESTINGUSERREQUEST,
    output_type=_BACKTESTINGUSERRESPONSE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='BacktestingUserCSV',
    full_name='backtesting.BacktestingSrv.BacktestingUserCSV',
    index=2,
    containing_service=None,
    input_type=_BACKTESTINGUSERCSVREQUEST,
    output_type=copytrade_dot_copytrade__pb2._EMPTY,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_BACKTESTINGSRV)

DESCRIPTOR.services_by_name['BacktestingSrv'] = _BACKTESTINGSRV

# @@protoc_insertion_point(module_scope)
